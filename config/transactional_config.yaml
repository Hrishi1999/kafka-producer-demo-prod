# Example configuration for Kafka transactions with SQL producer

database:
  host: ${DB_HOST:localhost}
  port: ${DB_PORT:1433}
  database: ${DB_NAME:SampleDB}
  username: ${DB_USER:sa}
  password: ${DB_PASSWORD:YourPassword123!}
  driver: "ODBC Driver 18 for SQL Server"
  trust_server_certificate: true
  encrypt: true
  connection_timeout: 30
  pool_size: 5

kafka:
  # Basic Kafka settings
  bootstrap_servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  security_protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
  client_id: "sql-kafka-producer-transactional"
  
  # Transaction settings
  enable_transactions: true
  transactional_id: ${KAFKA_TRANSACTIONAL_ID:sql-producer-instance-001}
  transaction_timeout_ms: 60000
  
  # Producer optimizations for transactions
  acks: "all"
  retries: 3
  retry_backoff_ms: 1000
  compression_type: "gzip"
  batch_size: 16384
  linger_ms: 100
  
  # Schema Registry (optional but recommended for production)
  schema_registry_url: ${SCHEMA_REGISTRY_URL:}
  schema_registry_username: ${SCHEMA_REGISTRY_USERNAME:}
  schema_registry_password: ${SCHEMA_REGISTRY_PASSWORD:}

queries:
  - id: "user_events_transactional"
    name: "User Events with Transactions"
    description: "Extract user events with exactly-once delivery"
    sql: |
      SELECT 
        u.user_id,
        u.username,
        u.email,
        u.created_at,
        u.last_login,
        u.status
      FROM users u
      WHERE u.updated_at > ?
      ORDER BY u.updated_at
    parameters: []
    target_topic: "users.events"
    key_column: "user_id"
    batch_size: 1000
    fetch_size: 1000
    schedule: "*/5 * * * *"  # Every 5 minutes
    enabled: true
    timeout_seconds: 300
    max_retries: 3

  - id: "order_events_transactional"
    name: "Order Events with Transactions"
    description: "Extract order events with exactly-once delivery"
    sql: |
      SELECT 
        o.order_id,
        o.customer_id,
        o.order_date,
        o.total_amount,
        o.status,
        o.payment_method
      FROM orders o
      WHERE o.updated_at > ?
      ORDER BY o.updated_at
    parameters: []
    target_topic: "orders.events"
    key_column: "order_id"
    batch_size: 500
    fetch_size: 500
    schedule: "*/2 * * * *"  # Every 2 minutes
    enabled: true
    timeout_seconds: 300
    max_retries: 3

monitoring:
  enabled: true
  metrics_port: 8080
  log_level: "INFO"
  log_format: "json"

# Global settings
state_file: "transactional_state.json"
checkpoint_interval_seconds: 30
worker_threads: 4

# Environment variables reference:
# DB_HOST - Database host
# DB_PORT - Database port 
# DB_NAME - Database name
# DB_USER - Database username
# DB_PASSWORD - Database password
# KAFKA_BOOTSTRAP_SERVERS - Kafka broker addresses
# KAFKA_SECURITY_PROTOCOL - Security protocol (PLAINTEXT, SASL_SSL, etc.)
# KAFKA_TRANSACTIONAL_ID - Unique transactional ID (must be unique per producer instance)
# SCHEMA_REGISTRY_URL - Schema Registry URL (optional)
# SCHEMA_REGISTRY_USERNAME - Schema Registry username (optional)
# SCHEMA_REGISTRY_PASSWORD - Schema Registry password (optional)